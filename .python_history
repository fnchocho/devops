print("hello world")
sum(5.9)
sum[5.9]
sum[5,9]
sum([5,9])
python_class = "hello world"
print(python_class)
type(python_class)
print(dir(python_class))
python_class.uper()
python_class.isupper()
python_class.count()
python_class.isspace()
"hello".upper()
"hello {} {}".format("Fide" "Ngwa")
"hello {} {}".format("Fide" ,"Ngwa")
"hello {1} {0}".format("Fide" ,"Ngwa")
python_class[4]
print(help(str))
sum([3,7])
print(numb1)
exit
list:['rice', 'chocolate', 'tea', 'beans']
list
items_bought= ['rice', 'chocolate', 'tea', 'beans']
items_bought
first_value = items_bought[1]
type(first_value)
first_value
first_value_uc = first_value.upper()
first_value_uc
print(dir(first_value.upper())
print(dir(first_value.upper))
first_value.
items_bought = ['rice', 'chocolate', 'tea', 'beans']
print(items_bought)
print("items_bought")
print("items_bought = ")
print("items_bought = "+ (items_bought))
print("items_bought = "+ items_bought)
print("items_bought = "+ list(items_bought))
for x in items_bought:
	print(x)
hello_world.py
logicaloperator.py
1 === 1
3<=3
2 != 3
sys.path
import sys
sys.path
pow(2,3)
2**5
import calendar
caledar.isleap(2023)
calendar.isleap(2023)
calendar.isleap(2024)
lis (3,7,4,1,8,2)
list (3,7,4,1,8,2)
list = (3,7,4,1,8,2)
dir list
dir.list
dir(list)
tp = (a,g,t, )
tp (a, g, t, )
tp ((a, g, t, ))
/bin/python3 /home/fnchocho/DEVOPS_CLASS_2023/logicaloperators.py
x = 3print(tpye(x))
x = 3: print(tpye(x))
x = 3;
	print(type(x))
x = 3:
x = 3
print(type(x))
type(x)
class(x) 
name = fidelis
name = 'fidelis'
for i in name:
print(i)
name = 'fidelis'
for i in name;
name = 'fidelis'
fir i in mame;
name = 'fidelis'
for i in name:
print(i)
for i in name:
	print(i)
name = 'fidelis'
for i in name:
	print(i)
nmae = "Fidelis"
for i in name:
	print(i)
nmae = "Fidelis"
>>> for i in name:
name = "Fidelis"
for i in name:
	print(i)
name = "Fidelis"
	for i in name:
import os
os.__
os.__doc
import os
os.__
import os
os.__
os.__doc
st = {"fidelis", "mason"}
help(st)
dict = {'name' : 'Fidelis'}
dict.
dict.items(help)
help(dict.items)
list1 = ['name',' dob', 'pob']
list2 = ['Emmanuel', '01/01/2000', 'Mason']
dict2 = zip(list1, list2) 
print(dict2)
dict2.__
for dict2 in zip(list1, list2)
for dict2 in zip(list1, list2):
print(dict2)
for dict2 in zip(list1, list2):
print(dict2)
for dict2 in zip(list1, list2):
	print(dict2)
/bin/python3 /home/fnchocho/DEVOPS_CLASS_2023/if_conditional.py
/bin/python3 /home/fnchocho/DEVOPS_CLASS_2023/for-loop.py
/bin/python3 /home/fnchocho/DEVOPS_CLASS_2023/while_loop.py
x = 20
while x < 10:
	print(x)
	x += 1
x = ['books', 'pens', 'rulers', 'markers', 'tapes']
x.count()
x.count(
x.count(help)
x.count(
os.getcwd()
import os
os.getcwd
import os
os.path
import anonymous
an.add.__
anonymous.
import anonymous
add.
import collections
collections.
import collections
help(collections)
exit()
import collections
help(collections)
list = [1,3,7]
list.
q
dt = {'name':'Fidelis', 'placce':'Fairfield'}
dt.items(help)
dt.items()
dt.keys()
exit()
person  = {}
person  = {'name':'Fidelis', 'DOB':'10/28/1994','POB':'Ohio', 'Address':'1945 JUnction'}
person.keys()
exit()
import struct
dir()		
dir(struct)
dir(annotations)
clas shape:
dir(struct)
class Shape:
	def __dir__(self):
		return ['area', 'perimeter', 'location']
s=Shape()
s = Shape()
dir(s)
exit()
dict = {'name': 'Fidelis', 'DOB': '10/28/1994', 'POB': 'Ohio', 'Address': '1934 Junction Rd'}
dict.values()
exit()
